/*
 *  CLRadeonExtender - Unofficial OpenCL Radeon Extensions Library
 *  Copyright (C) 2014-2015 Mateusz Szpakowski
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <CLRX/Config.h>
#include "GCNAsmOpc.h"

const GCNAsmOpcodeCase encGCN12OpcodeCases[] =
{
    /* SOPK */
    { "    s_add_u32  flat_scratch_lo, s4, s61", 0x80663d04U, 0, false, true, "" },
    { "    s_add_u32  flat_scratch_hi, s4, s61", 0x80673d04U, 0, false, true, "" },
    { "    s_add_u32  xnack_mask_lo, s4, s61", 0x80683d04U, 0, false, true, "" },
    { "    s_add_u32  xnack_mask_hi, s4, s61", 0x80693d04U, 0, false, true, "" },
    { "    s_add_u32  xnack_mask_hi, 0.15915494, s61", 0x80693df8U, 0, false, true, "" },
    { "    s_add_u32  xnack_mask_hi, 15.915494e-2, s61", 0x80693df8U, 0, false, true, "" },
    // SOP2 instructions
    { "    s_addc_u32  s21, s4, s61", 0x82153d04U, 0, false, true, "" },
    { "    s_and_b32  s21, s4, s61", 0x86153d04U, 0, false, true, "" },
    { "    s_and_b64  s[20:21], s[4:5], s[62:63]", 0x86943e04U, 0, false, true, "" },
    { "    s_or_b32  s21, s4, s61", 0x87153d04U, 0, false, true, "" },
    { "    s_or_b64  s[20:21], s[4:5], s[62:63]", 0x87943e04U, 0, false, true, "" },
    { "    s_xor_b32  s21, s4, s61", 0x88153d04U, 0, false, true, "" },
    { "    s_xor_b64  s[20:21], s[4:5], s[62:63]", 0x88943e04U, 0, false, true, "" },
    { "    s_andn2_b32  s21, s4, s61", 0x89153d04U, 0, false, true, "" },
    { "    s_andn2_b64  s[20:21], s[4:5], s[62:63]", 0x89943e04U, 0, false, true, "" },
    { "    s_orn2_b32  s21, s4, s61", 0x8a153d04U, 0, false, true, "" },
    { "    s_orn2_b64  s[20:21], s[4:5], s[62:63]", 0x8a943e04U, 0, false, true, "" },
    { "    s_nand_b32  s21, s4, s61", 0x8b153d04U, 0, false, true, "" },
    { "    s_nand_b64  s[20:21], s[4:5], s[62:63]", 0x8b943e04U, 0, false, true, "" },
    { "    s_nor_b32  s21, s4, s61", 0x8c153d04U, 0, false, true, "" },
    { "    s_nor_b64  s[20:21], s[4:5], s[62:63]", 0x8c943e04U, 0, false, true, "" },
    { "    s_xnor_b32  s21, s4, s61", 0x8d153d04U, 0, false, true, "" },
    { "    s_xnor_b64  s[20:21], s[4:5], s[62:63]", 0x8d943e04U, 0, false, true, "" },
    { "    s_lshl_b32  s21, s4, s61", 0x8e153d04U, 0, false, true, "" },
    { "    s_lshl_b64  s[20:21], s[4:5], s61", 0x8e943d04U, 0, false, true, "" },
    { "    s_lshr_b32  s21, s4, s61", 0x8f153d04U, 0, false, true, "" },
    { "    s_lshr_b64  s[20:21], s[4:5], s61", 0x8f943d04U, 0, false, true, "" },
    { "    s_ashr_i32  s21, s4, s61", 0x90153d04U, 0, false, true, "" },
    { "    s_ashr_i64  s[20:21], s[4:5], s61", 0x90943d04U, 0, false, true, "" },
    { "    s_bfm_b32  s21, s4, s61", 0x91153d04U, 0, false, true, "" },
    { "    s_bfm_b64  s[20:21], s4, s62", 0x91943e04U, 0, false, true, "" },
    { "    s_mul_i32  s21, s4, s61", 0x92153d04U, 0, false, true, "" },
    { "    s_bfe_u32  s21, s4, s61", 0x92953d04U, 0, false, true, "" },
    { "    s_bfe_i32  s21, s4, s61", 0x93153d04U, 0, false, true, "" },
    { "    s_bfe_u64  s[20:21], s[4:5], s61", 0x93943d04U, 0, false, true, "" },
    { "    s_bfe_i64  s[20:21], s[4:5], s61", 0x94143d04U, 0, false, true, "" },
    { "    s_cbranch_g_fork  s[4:5], s[62:63]", 0x94803e04U, 0, false, true, "" },
    { "    s_absdiff_i32  s21, s4, s61", 0x95153d04U, 0, false, true, "" },
    { "    s_rfe_restore_b64 s[4:5], s61", 0x95803d04U, 0, false, true, "" },
    /* SOP1 encoding */
    { "    s_mov_b32  s86, s20", 0xbed60014U, 0, false, true, "" },
    { "    s_mov_b64  s[86:87], s[20:21]", 0xbed60114U, 0, false, true, "" },
    { "    s_cmov_b32  s86, s20", 0xbed60214U, 0, false, true, "" },
    { "    s_cmov_b64  s[86:87], s[20:21]", 0xbed60314U, 0, false, true, "" },
    { "    s_not_b32  s86, s20", 0xbed60414U, 0, false, true, "" },
    { "    s_not_b64  s[86:87], s[20:21]", 0xbed60514U, 0, false, true, "" },
    { "    s_wqm_b32  s86, s20", 0xbed60614U, 0, false, true, "" },
    { "    s_wqm_b64  s[86:87], s[20:21]", 0xbed60714U, 0, false, true, "" },
    { "    s_brev_b32  s86, s20", 0xbed60814U, 0, false, true, "" },
    { "    s_brev_b64  s[86:87], s[20:21]", 0xbed60914U, 0, false, true, "" },
    { "    s_bcnt0_i32_b32  s86, s20", 0xbed60a14U, 0, false, true, "" },
    { "    s_bcnt0_i32_b64  s86, s[20:21]", 0xbed60b14U, 0, false, true, "" },
    { "    s_bcnt1_i32_b32  s86, s20", 0xbed60c14U, 0, false, true, "" },
    { "    s_bcnt1_i32_b64  s86, s[20:21]", 0xbed60d14U, 0, false, true, "" },
    { "    s_ff0_i32_b32  s86, s20", 0xbed60e14U, 0, false, true, "" },
    { "    s_ff0_i32_b64  s86, s[20:21]", 0xbed60f14U, 0, false, true, "" },
    { "    s_ff1_i32_b32  s86, s20", 0xbed61014U, 0, false, true, "" },
    { "    s_ff1_i32_b64  s86, s[20:21]", 0xbed61114U, 0, false, true, "" },
    { "    s_flbit_i32_b32  s86, s20", 0xbed61214U, 0, false, true, "" },
    { "    s_flbit_i32_b64  s86, s[20:21]", 0xbed61314U, 0, false, true, "" },
    { "    s_flbit_i32  s86, s20", 0xbed61414U, 0, false, true, "" },
    { "    s_flbit_i32_i64  s86, s[20:21]", 0xbed61514U, 0, false, true, "" },
    { "    s_sext_i32_i8  s86, s20", 0xbed61614U, 0, false, true, "" },
    { "    s_sext_i32_i16  s86, s20", 0xbed61714U, 0, false, true, "" },
    { "    s_bitset0_b32  s86, s20", 0xbed61814U, 0, false, true, "" },
    { "    s_bitset0_b64  s[86:87], s20", 0xbed61914U, 0, false, true, "" },
    { "    s_bitset1_b32  s86, s20", 0xbed61a14U, 0, false, true, "" },
    { "    s_bitset1_b64  s[86:87], s20", 0xbed61b14U, 0, false, true, "" },
    { "    s_getpc_b64  s[86:87]", 0xbed61c00U, 0, false, true, "" },
    { "    s_setpc_b64  s[20:21]", 0xbe801d14U, 0, false, true, "" },
    { "    s_swappc_b64  s[86:87], s[20:21]", 0xbed61e14U, 0, false, true, "" },
    { "    s_rfe_b64  s[20:21]", 0xbe801f14U, 0, false, true, "" },
    { "    s_and_saveexec_b64 s[86:87], s[20:21]", 0xbed62014U, 0, false, true, "" },
    { "    s_or_saveexec_b64 s[86:87], s[20:21]", 0xbed62114U, 0, false, true, "" },
    { "    s_xor_saveexec_b64 s[86:87], s[20:21]", 0xbed62214U, 0, false, true, "" },
    { "    s_andn2_saveexec_b64 s[86:87], s[20:21]", 0xbed62314U, 0, false, true, "" },
    { "    s_orn2_saveexec_b64 s[86:87], s[20:21]", 0xbed62414U, 0, false, true, "" },
    { "    s_nand_saveexec_b64 s[86:87], s[20:21]", 0xbed62514U, 0, false, true, "" },
    { "    s_nor_saveexec_b64 s[86:87], s[20:21]", 0xbed62614U, 0, false, true, "" },
    { "    s_xnor_saveexec_b64 s[86:87], s[20:21]", 0xbed62714U, 0, false, true, "" },
    { "    s_quadmask_b32  s86, s20",  0xbed62814U, 0, false, true, "" },
    { "    s_quadmask_b64  s[86:87], s[20:21]",  0xbed62914U, 0, false, true, "" },
    { "    s_movrels_b32  s86, s20",  0xbed62a14U, 0, false, true, "" },
    { "    s_movrels_b64  s[86:87], s[20:21]",  0xbed62b14U, 0, false, true, "" },
    { "    s_movreld_b32  s86, s20",  0xbed62c14U, 0, false, true, "" },
    { "    s_movreld_b64  s[86:87], s[20:21]",  0xbed62d14U, 0, false, true, "" },
    { "    s_cbranch_join  s20", 0xbe802e14U, 0, false, true, "" },
    { "    s_mov_regrd_b32 s86, s20", 0xbed62f14U, 0, false, true, "" },
    { "    s_abs_i32  s86, s20", 0xbed63014U, 0, false, true, "" },
    { "    s_mov_fed_b32  s86, s20", 0xbed63114U, 0, false, true, "" },
    { "    s_set_gpr_idx_idx s20", 0xbe803214U, 0, false, true, "" },
    /* SOPC encoding */
    { "    s_cmp_lt_i32  s29, s69", 0xbf04451dU, 0, false, true, "" },
    { "    s_bitcmp1_b32  s29, s69", 0xbf0d451dU, 0, false, true, "" },
    { "    s_bitcmp0_b64  s[28:29], s69", 0xbf0e451cU, 0, false, true, "" },
    { "    s_setvskip  s29, s69", 0xbf10451dU, 0, false, true, "" },
    /* SOPC new instructions */
    { "    s_set_gpr_idx_on s29, 0x45", 0xbf11451dU, 0, false, true, "" },
    { "    s_set_gpr_idx_on s29, 0xff", 0xbf11ff1dU, 0, false, true, "" }, // special case
    { "xd=43; s_set_gpr_idx_on s29, 4+xd", 0xbf112f1dU, 0, false, true, "" },
    { "s_set_gpr_idx_on s29, 4+xd;xd=43", 0xbf112f1dU, 0, false, true, "" },
    { "    s_cmp_eq_u64  s[28:29], s[68:69]", 0xbf12441cU, 0, false, true, "" },
    { "    s_cmp_lg_u64  s[28:29], s[68:69]", 0xbf13441cU, 0, false, true, "" },
    { "    s_cmp_ne_u64  s[28:29], s[68:69]", 0xbf13441cU, 0, false, true, "" },
    /* SOPK encoding */
    { "    s_movk_i32      s43, 0xd3b9", 0xb02bd3b9U, 0, false, true, "" },
    { "    s_cmovk_i32  s43, 0xd3b9", 0xb0abd3b9U, 0, false, true, "" },
    { "    s_cmpk_eq_i32  s43, 0xd3b9", 0xb12bd3b9U, 0, false, true, "" },
    { "    s_cmpk_lg_i32  s43, 0xd3b9", 0xb1abd3b9U, 0, false, true, "" },
    { "    s_cmpk_gt_i32  s43, 0xd3b9", 0xb22bd3b9U, 0, false, true, "" },
    { "    s_cmpk_ge_i32  s43, 0xd3b9", 0xb2abd3b9U, 0, false, true, "" },
    { "    s_cmpk_lt_i32  s43, 0xd3b9", 0xb32bd3b9U, 0, false, true, "" },
    { "    s_cmpk_le_i32  s43, 0xd3b9", 0xb3abd3b9U, 0, false, true, "" },
    { "    s_cmpk_eq_u32  s43, 0xd3b9", 0xb42bd3b9U, 0, false, true, "" },
    { "    s_cmpk_lg_u32  s43, 0xd3b9", 0xb4abd3b9U, 0, false, true, "" },
    { "    s_cmpk_gt_u32  s43, 0xd3b9", 0xb52bd3b9U, 0, false, true, "" },
    { "    s_cmpk_ge_u32  s43, 0xd3b9", 0xb5abd3b9U, 0, false, true, "" },
    { "    s_cmpk_lt_u32  s43, 0xd3b9", 0xb62bd3b9U, 0, false, true, "" },
    { "    s_cmpk_le_u32  s43, 0xd3b9", 0xb6abd3b9U, 0, false, true, "" },
    { "    s_addk_i32  s43, 0xd3b9", 0xb72bd3b9U, 0, false, true, "" },
    { "    s_mulk_i32  s43, 0xd3b9", 0xb7abd3b9U, 0, false, true, "" },
    { "    s_cbranch_i_fork s[44:45], xxxx-8\nxxxx:\n", 0xb82cfffeU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(mode, 0, 1)", 0xb8ab0001U, 0, false, true, "" },
    { "    s_setreg_b32  hwreg(trapsts, 3, 10), s43", 0xb92b48c3u, 0, false, true, "" },
    { "    s_setreg_imm32_b32 hwreg(trapsts, 3, 10), 0x24da4f",
                    0xba0048c3u, 0x24da4fU, true, true, "" },
    /* SOPP encoding */
    { "    s_nop  7", 0xbf800007U, 0, false, true, "" },
    { "    s_cbranch_execnz  xxxx-8\nxxxx:\n", 0xbf89fffeU, 0, false, true, "" },
    { "    s_wakeup\n", 0xbf830000U, 0, false, true, "" },
    { "    s_setkill  0x32b\n", 0xbf8b032bU, 0, false, true, "" },
    { "    s_cbranch_execnz  xxxx-8\nxxxx:\n", 0xbf89fffeU, 0, false, true, "" },
    { "    s_endpgm_saved", 0xbf9b0000U, 0, false, true, "" },
    { "    s_set_gpr_idx_off", 0xbf9c0000U, 0, false, true, "" },
    { "    s_set_gpr_idx_mode 332", 0xbf9d014cU, 0, false, true, "" },
    /* SMEM encoding */
    { "    s_load_dword  s50, s[58:59], 0x1345b", 0xc0020c9dU, 0x1345b, true, true, "" },
    { "    s_load_dword  s50, s[58:59], 0x1345b glc   ",
        0xc0030c9dU, 0x1345b, true, true, "" },
    { "    s_load_dword  s50, s[58:59], 0x1345b glc  glc ",
        0xc0030c9dU, 0x1345b, true, true, "" },
    { "xd=17;xy=35; s_load_dword  s50, s[58:59], xd*xy",
        0xc0020c9dU, 17*35, true, true, "" },
    { "s_load_dword  s50, s[58:59], xd*xy;xd=17;xy=35",
        0xc0020c9dU, 17*35, true, true, "" },
    { "s6=0x4dca7; s_load_dword  s50, s[58:59], @s6",
        0xc0020c9dU, 0x4dca7U, true, true, "" },
    { "    s_load_dword  s50, s[58:59], s6 ", 0xc0000c9dU, 6, true, true, "" },
    /* SMEM warnings */
    { "xx=0x14dca7; s_load_dword  s50, s[58:59], xx", 0xc0020c9dU, 0x4dca7U, true, true,
        "test.s:1:43: Warning: Value 0x14dca7 truncated to 0x4dca7\n" },
    { "s_load_dword  s50, s[58:59], xx;xx=0x14dca7", 0xc0020c9dU, 0x4dca7U, true, true,
        "test.s:1:30: Warning: Value 0x14dca7 truncated to 0x4dca7\n" },
    /* SMEM errors */
    { "    s_load_dword  s[50:53], s[58:59], 0x1345b", 0, 0, false, false,
        "test.s:1:19: Error: Required 1 scalar register\n" },
    { "    s_load_dword  s50, s[58:58], 0x1345b", 0, 0, false, false,
        "test.s:1:24: Error: Required 2 scalar registers\n" },
    /* SMEM instructons */
    { "    s_load_dwordx2  s[50:51], s[58:59], 0x1b", 0xc0060c9dU, 0x1b, true, true, "" },
    { "    s_load_dwordx4  s[52:55], s[58:59], 0x1b", 0xc00a0d1dU, 0x1b, true, true, "" },
    { "    s_load_dwordx8  s[52:59], s[58:59], 0x1b", 0xc00e0d1dU, 0x1b, true, true, "" },
    { "    s_load_dwordx16  s[52:67], s[58:59], 0x1b", 0xc0120d1dU, 0x1b, true, true, "" },
    { "    s_buffer_load_dword s50, s[56:59], 0x5b", 0xc0220c9cU, 0x5b, true, true, "" },
    { "    s_buffer_load_dwordx2 s[50:51], s[56:59], 0x5b",
        0xc0260c9cU, 0x5b, true, true, "" },
    { "    s_buffer_load_dwordx4 s[52:55], s[56:59], 0x5b",
        0xc02a0d1cU, 0x5b, true, true, "" },
    { "    s_buffer_load_dwordx8 s[52:59], s[56:59], 0x5b",
        0xc02e0d1cU, 0x5b, true, true, "" },
    { "    s_buffer_load_dwordx16 s[52:67], s[56:59], 0x5b",
        0xc0320d1cU, 0x5b, true, true, "" },
    { "    s_store_dword  s50, s[58:59], 0x1b", 0xc0420c9dU, 0x1b, true, true, "" },
    { "    s_store_dwordx2  s[50:51], s[58:59], 0x1b", 0xc0460c9dU, 0x1b, true, true, "" },
    { "    s_store_dwordx4  s[52:55], s[58:59], 0x1b", 0xc04a0d1dU, 0x1b, true, true, "" },
    { "    s_buffer_store_dword  s50, s[60:63], 0x1b", 0xc0620c9eU, 0x1b, true, true, "" },
    { "    s_buffer_store_dwordx2  s[50:51], s[60:63], 0x1b",
        0xc0660c9eU, 0x1b, true, true, "" },
    { "    s_buffer_store_dwordx4  s[52:55], s[60:63], 0x1b",
        0xc06a0d1eU, 0x1b, true, true, "" },
    { "    s_dcache_inv", 0xc0800000U, 0, true, true, "" },
    { "    s_dcache_inv   glc ", 0xc0810000U, 0, true, true, "" },
    { "    s_dcache_wb", 0xc0840000U, 0, true, true, "" },
    { "    s_dcache_inv_vol", 0xc0880000U, 0, true, true, "" },
    { "    s_dcache_wb_vol", 0xc08c0000U, 0, true, true, "" },
    { "    s_memtime  s[52:53]", 0xc0900d00U, 0, true, true, "" },
    { "    s_memrealtime  s[52:53]", 0xc0940d00U, 0, true, true, "" },
    { "    s_atc_probe  0x32, s[58:59], 0xfff5b", 0xc09a0c9dU, 0xfff5b, true, true, "" },
    { "da=0x35; s_atc_probe  0x35, s[58:59], 0xfff5b",
        0xc09a0d5dU, 0xfff5b, true, true, "" },
    { "    s_atc_probe_buffer  0x32, s[56:59], 0xfff5b",
        0xc09e0c9cU, 0xfff5b, true, true, "" },
    { "s_atc_probe_buffer  x, s[56:59], 0xfff5b; x=0x37",
        0xc09e0ddcU, 0xfff5b, true, true, "" },
    { "s_atc_probe_buffer  x, s[56:59], 0xfff5b; x=0xb7", 0xc09e0ddcU, 0xfff5b, true, true,
        "test.s:1:21: Warning: Value 0xb7 truncated to 0x37\n" },
    { "    s_atc_probe  0xb2, s[58:59], 0xfff5b", 0xc09a0c9dU, 0xfff5b, true, true,
        "test.s:1:18: Warning: Value 0xb2 truncated to 0x32\n" },
    /* VOP2 encoding - VOP_SDWA */
    { "   v_cndmask_b32   v154, v0, v107, vcc dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x0134d6f9U, 0, true, true, "" },
    { "   v_cndmask_b32   v154, v0, v107, vcc dst_sel:byte_0 src0_sel:BYTE_0 src1_sel:b0",
        0x0134d6f9U, 0, true, true, "" },
    { "   v_cndmask_b32   v154, v0, v107, vcc dst_sel :byte_0 src0_sel : b0 src1_sel : b0 ",
        0x0134d6f9U, 0, true, true, "" },
    { "   v_cndmask_b32   v154, v61, v107, vcc dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x0134d6f9U, 0x3dU, true, true, "" },
    { "   v_cndmask_b32   v154, v61, v107, vcc dst_sel:byte3 src0_sel:byte2 src1_sel:byte1",
        0x0134d6f9U, 0x0102033dU, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_sel:b1 src0_sel:byte1 src1_sel:byte_1",
        0x0134d6f9U, 0x01010141U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_sel:b2 src0_sel:byte2 src1_sel:byte_2",
        0x0134d6f9U, 0x02020241U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_sel:b3 src0_sel:byte3 src1_sel:byte_3",
        0x0134d6f9U, 0x03030341U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_sel:w0 src0_sel:word0 src1_sel:word_0",
        0x0134d6f9U, 0x04040441U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_sel:w1 src0_sel:word1 src1_sel:word_1",
        0x0134d6f9U, 0x05050541U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_sel:w1 src0_sel:word0 src1_sel:dword",
        0x0134d6f9U, 0x06040541U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_un:preserve",
        0x0134d6f9U, 0x06061641U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_unused:UNUSED_PRESERVE",
        0x0134d6f9U, 0x06061641U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_unused : SEXT",
        0x0134d6f9U, 0x06060e41U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_unused:pad",
        0x0134d6f9U, 0x06060641U, true, true, "" },
    /* VOP_SDWA - operand modifiers */
    { "   v_cndmask_b32   v154, abs(v65), v107, vcc dst_sel:word1",
        0x0134d6f9U, 0x06260541U, true, true, "" },
    { "   v_cndmask_b32   v154, -abs(v65), v107, vcc dst_sel:word1",
        0x0134d6f9U, 0x06360541U, true, true, "" },
    { "   v_cndmask_b32   v154, sext(-abs(v65)), v107, vcc dst_sel:word1",
        0x0134d6f9U, 0x063e0541U, true, true, "" },
    { "   v_cndmask_b32   v154, sext(-v65), v107, vcc dst_sel:word1",
        0x0134d6f9U, 0x061e0541U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, abs(v107), vcc dst_sel:word1",
        0x0134d6f9U, 0x26060541U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, -abs(v107), vcc dst_sel:word1",
        0x0134d6f9U, 0x36060541U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, sext(-abs(v107)), vcc dst_sel:word1",
        0x0134d6f9U, 0x3e060541U, true, true, "" },
    { "   v_cndmask_b32   v154, v65, sext(-v107), vcc dst_sel:word1",
        0x0134d6f9U, 0x1e060541U, true, true, "" },
    { "   v_cndmask_b32   v154, abs(v65), v107, vcc clamp dst_sel:word1",
        0x0134d6f9U, 0x06262541U, true, true, "" },
    /* VOP_SDWA - warnings */
    { "   v_cndmask_b32   v154, abs(v65), v107, vcc dst_sel:word1 dst_sel:word0",
        0x0134d6f9U, 0x06260441U, true, true,
        "test.s:1:60: Warning: Dst_sel is already defined\n" },
    { "   v_cndmask_b32   v154, abs(v65), v107, vcc src0_sel:word1 src0_sel:word0",
        0x0134d6f9U, 0x06240641U, true, true,
        "test.s:1:61: Warning: Src0_sel is already defined\n" },
    { "   v_cndmask_b32   v154, abs(v65), v107, vcc src1_sel:word1 src1_sel:word0",
        0x0134d6f9U, 0x04260641U, true, true,
        "test.s:1:61: Warning: Src1_sel is already defined\n" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_unused:pad dst_un:PRESERVE",
        0x0134d6f9U, 0x06061641U, true, true,
        "test.s:1:56: Warning: Dst_unused is already defined\n" },
    /* VOP_SDWA - errors */
    { "   v_cndmask_b32   v154, v67, v107, vcc dst_sel:byte", 0, 0, false, false,
        "test.s:1:49: Error: Unknown dst_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc dst_sel:", 0, 0, false, false,
        "test.s:1:49: Error: Expected dst_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc dst_sel  ", 0, 0, false, false,
        "test.s:1:50: Error: Expected ':' before dst_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc src0_sel:byte", 0, 0, false, false,
        "test.s:1:50: Error: Unknown src0_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc src0_sel:", 0, 0, false, false,
        "test.s:1:50: Error: Expected src0_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc src0_sel  ", 0, 0, false, false,
        "test.s:1:51: Error: Expected ':' before src0_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc src1_sel:byte", 0, 0, false, false,
        "test.s:1:50: Error: Unknown src1_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc src1_sel:", 0, 0, false, false,
        "test.s:1:50: Error: Expected src1_sel\n" },
    { "   v_cndmask_b32   v154, v67, v107, vcc src1_sel  ", 0, 0, false, false,
        "test.s:1:51: Error: Expected ':' before src1_sel\n" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_unused:xpad", 0, 0, false, false,
        "test.s:1:52: Error: Unknown dst_unused\n" },
    { "   v_cndmask_b32   v154, v65, v107, vcc dst_unused", 0, 0, false, false,
        "test.s:1:51: Error: Expected ':' before dst_unused\n" },
    { "   v_cndmask_b32   v154, 65, v107, vcc dst_sel:word1", 0, 0, false, false,
        "test.s:1:4: Error: Literal with SDWA or DPP word is illegal\n" },
    { "   v_cndmask_b32   v154, v67, abs(v107), vcc clamp", 0, 0, false, false,
        "test.s:1:4: Error: Abs modifier is illegal for VOP3B encoding\n" },
    /* VOP2 - DPP */
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[0,0,0,0] bank_mask:0 row_mask:0",
        0x0134d6faU, 0xbe, true, true, ""  },
    { "   v_cndmask_b32  v154, v190, v107, vcc bank_mask:0 row_mask:0",
        0x0134d6faU, 0xe4be, true, true, ""  },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2,1,0,3] "
        "bank_mask:14 row_mask:11", 0x0134d6faU, 0xbe00c6be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[3,2,1,2] "
        "bank_mask:14 row_mask:11", 0x0134d6faU, 0xbe009bbe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm :  [ 2  , 1 , 0  , 3  ] "
        "bank_mask  : 14 row_mask  :  11   ", 0x0134d6faU, 0xbe00c6be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[0,0,0,0] bound_ctrl",
        0x0134d6faU, 0xff0800be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[0,0,0,0] bound_ctrl : 1",
        0x0134d6faU, 0xff0800be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[0,0,0,0] bound_ctrl : 0 ",
        0x0134d6faU, 0xff0000be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[0,0,0,0] bank_mask:0 row_mask:0",
        0x0134d6faU, 0xbe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:3 ",
        0x0134d6faU, 0xff0103be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:14 ",
        0x0134d6faU, 0xff010ebe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shr:3 ",
        0x0134d6faU, 0xff0113be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shr:14 ",
        0x0134d6faU, 0xff011ebe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_ror:3 ",
        0x0134d6faU, 0xff0123be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_ror:14 ",
        0x0134d6faU, 0xff012ebe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_ror :  14 ",
        0x0134d6faU, 0xff012ebe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shl ",
        0x0134d6faU, 0xff0130be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shl : 1 ",
        0x0134d6faU, 0xff0130be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_rol ",
        0x0134d6faU, 0xff0134be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_rol : 1 ",
        0x0134d6faU, 0xff0134be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shr ",
        0x0134d6faU, 0xff0138be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shr : 1 ",
        0x0134d6faU, 0xff0138be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_ror ",
        0x0134d6faU, 0xff013cbe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_ror : 1 ",
        0x0134d6faU, 0xff013cbe, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_mirror",
        0x0134d6faU, 0xff0140be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_half_mirror",
        0x0134d6faU, 0xff0141be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_hmirror",
        0x0134d6faU, 0xff0141be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_bcast:15",
        0x0134d6faU, 0xff0142be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_bcast15",
        0x0134d6faU, 0xff0142be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_bcast:31",
        0x0134d6faU, 0xff0143be, true, true, "" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_bcast31",
        0x0134d6faU, 0xff0143be, true, true, "" },
    { "   v_cndmask_b32  v154, abs(v190), -v107, vcc row_shl:3 ",
        0x0134d6faU, 0xff6103be, true, true, "" },
    { "   v_cndmask_b32  v154, abs(v190), -abs(v107), vcc row_shl:3 ",
        0x0134d6faU, 0xffe103be, true, true, "" },
    { "   v_cndmask_b32  v154, -v190, -abs(v107), vcc row_shl:3 ",
        0x0134d6faU, 0xffd103be, true, true, "" },
    /* VOP_DPP warnings */
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2,1,0,3] bank_mask:1 "
        "bank_mask:14 row_mask:2 row_mask:11", 0x0134d6faU, 0xbe00c6be, true, true,
        "test.s:1:73: Warning: Bank_mask is already defined\n"
        "test.s:1:97: Warning: Row_mask is already defined\n"  },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[0,0,0,0] bound_ctrl:0 bound_ctrl",
        0x0134d6faU, 0xff0800be, true, true,
        "test.s:1:74: Warning: BoundCtrl is already defined\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_ror:2 wave_ror:1 ",
        0x0134d6faU, 0xff013cbe, true, true,
        "test.s:1:51: Warning: DppCtrl is already defined\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_half_mirror wave_ror:1 ",
        0x0134d6faU, 0xff013cbe, true, true,
        "test.s:1:57: Warning: DppCtrl is already defined\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_ror:35 ",
        0x0134d6faU, 0xff0123be, true, true,
        "test.s:1:49: Warning: Value 0x23 truncated to 0x3\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2,1,0,3] "
        "bank_mask:0xdde row_mask:0xabc3b", 0x0134d6faU, 0xbe00c6be, true, true,
        "test.s:1:71: Warning: Value 0xdde truncated to 0xe\n"
        "test.s:1:86: Warning: Value 0xabc3b truncated to 0xb\n" },
    /* VOP_DPP errors */
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2,,0,3]", 0, 0, false, false,
        "test.s:1:54: Error: Missing number\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2,1,0,3  ", 0, 0, false, false,
        "test.s:1:61: Error: Unterminated quad_perm\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2 1 0 3]  ", 0, 0, false, false,
        "test.s:1:54: Error: Expected ',' before quad_perm component\n"
        "test.s:1:54: Error: Some garbages at VOP modifier place\n"
        "test.s:1:56: Error: Some garbages at VOP modifier place\n"
        "test.s:1:58: Error: Some garbages at VOP modifier place\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:0", 0, 0, false, false,
        "test.s:1:49: Error: Illegal zero shift for row_XXX shift\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:32", 0, 0, false, false,
        "test.s:1:49: Warning: Value 0x20 truncated to 0x0\n"
        "test.s:1:49: Error: Illegal zero shift for row_XXX shift\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shr : 0 ", 0, 0, false, false,
        "test.s:1:52: Error: Value must be '1'\n"
        "test.s:1:52: Error: Some garbages at VOP modifier place\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shr :  ", 0, 0, false, false,
        "test.s:1:53: Error: Value must be '1'\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc wave_shl bound_ctrl:3", 0, 0, false, false,
        "test.s:1:61: Error: Value must be '0' or '1'\n"
        "test.s:1:61: Error: Some garbages at VOP modifier place\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm:[2,1,0,3] "
        "bank_mask:, row_mask:", 0, 0, false, false,
        "test.s:1:71: Error: Expected expression\n"
        "test.s:1:71: Error: Some garbages at VOP modifier place\n"
        "test.s:1:82: Error: Expected expression\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc quad_perm bank_mask row_mask",
        0, 0, false, false, "test.s:1:51: Error: Expected ':' before quad_perm\n"
        "test.s:1:61: Error: Expected ':' before bank_mask\n"
        "test.s:1:69: Error: Expected ':' before row_mask\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl ", 0, 0, false, false,
        "test.s:1:49: Error: Expected ':' before row_shl\n" },
    { "   v_cndmask_b32  v154, sext(v190), v107, vcc row_shl:3 ", 0, 0, false, false,
        "test.s:1:4: Error: SEXT modifiers is unavailable for DPP word\n" },
    { "   v_cndmask_b32  v154, 12333, v107, vcc bank_mask:0 row_mask:0", 0, 0,
        false, false, "test.s:1:4: Error: Literal with SDWA or DPP word is illegal\n" },
    /* VOP_SDWA and VOP_DPP mixing errors */
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:3 clamp ", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:3 dst_sel:b1", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:3 src0_sel:b1", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc row_shl:3 src1_sel:b1", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc bank_mask:5 src1_sel:b1", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc bank_mask:5 clamp", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc bank_mask:5 mul:2", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, vcc src0_sel:b3 mul:2", 0, 0, false, false,
        "test.s:1:41: Error: Mixing modifiers from different encodings is illegal\n" },
    { "   v_cndmask_b32   v154, s87, v107, vcc dst_sel:byte0", 0, 0, false, false,
        "test.s:1:4: Error: SRC0 must be a vector register with SDWA or DPP word\n" },
    { "   v_cndmask_b32   v154, v87, s85, vcc dst_sel:byte0", 0, 0, false, false,
        "test.s:1:4: Error: Mixing VOP3 with SDWA or WORD is illegal\n" },
    { "   v_cndmask_b32  v154, v190, v107, s[8:9] bank_mask:0 row_mask:0", 0, 0,
        false, false, "test.s:1:4: Error: Mixing VOP3 with SDWA or WORD is illegal\n" },
    /* choosing VOP3 */
    { "v_add_f32  v55, v27, abs(v90)", 0xd1010237U, 0x0002b51bU, true, true, "" },
    { "v_add_f32  v55, v27, abs(v90) clamp", 0xd1018237U, 0x0002b51bU, true, true, "" },
    { "v_add_f32  v55, v27, abs(v90) mul:2", 0xd1010237U, 0x0802b51bU, true, true, "" },
    { "v_add_f32  v55, -abs(v27), v90", 0xd1010137U, 0x2002b51bU, true, true, "" },
    { "v_add_f32  v55, -abs(v27), -abs(v90)", 0xd1010337U, 0x6002b51bU, true, true, "" },
    { "v_cndmask_b32  v42, v50, v107, vcc clamp",
        0xd100802aU, 0x01aad732U, true, true, "" },
    { "v_cndmask_b32  v42, v50, -v107, vcc",
        0xd100002aU, 0x41aad732U, true, true, "" },
    /* normal VOP2 coding */
    { "v_cndmask_b32   v154, v190, v107, vcc", 0x0134d7beU, 0, false, true, "" },
    /* VOP2 instructions */
    { "    v_add_f32  v154, v21, v107", 0x0334d715U, 0, false, true, "" },
    { "    v_add_f32  v55, s27, v90 vop3", 0xd1010037U, 0x0002b41bU, true, true, "" },
    { "    v_sub_f32  v154, v21, v107", 0x0534d715U, 0, false, true, "" },
    { "    v_sub_f32  v55, s27, v90 vop3", 0xd1020037U, 0x0002b41bU, true, true, "" },
    { "    v_subrev_f32  v154, v21, v107", 0x0734d715U, 0, false, true, "" },
    { "    v_subrev_f32  v55, s27, v90 vop3", 0xd1030037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_legacy_f32  v154, v21, v107", 0x0934d715U, 0, false, true, "" },
    { "    v_mul_legacy_f32  v55, s27, v90 vop3", 0xd1040037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_f32  v154, v21, v107", 0x0b34d715U, 0, false, true, "" },
    { "    v_mul_f32  v55, s27, v90 vop3", 0xd1050037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_i32_i24  v154, v21, v107", 0x0d34d715U, 0, false, true, "" },
    { "    v_mul_i32_i24  v55, s27, v90 vop3", 0xd1060037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_hi_i32_i24  v154, v21, v107", 0x0f34d715U, 0, false, true, "" },
    { "    v_mul_hi_i32_i24  v55, s27, v90 vop3", 0xd1070037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_u32_u24  v154, v21, v107", 0x1134d715U, 0, false, true, "" },
    { "    v_mul_u32_u24  v55, s27, v90 vop3", 0xd1080037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_hi_u32_u24  v154, v21, v107", 0x1334d715U, 0, false, true, "" },
    { "    v_mul_hi_u32_u24  v55, s27, v90 vop3", 0xd1090037U, 0x0002b41bU, true, true, "" },
    { "    v_min_f32  v154, v21, v107", 0x1534d715U, 0, false, true, "" },
    { "    v_min_f32  v55, s27, v90 vop3", 0xd10a0037U, 0x0002b41bU, true, true, "" },
    { "    v_max_f32  v154, v21, v107", 0x1734d715U, 0, false, true, "" },
    { "    v_max_f32  v55, s27, v90 vop3", 0xd10b0037U, 0x0002b41bU, true, true, "" },
    { "    v_min_i32  v154, v21, v107", 0x1934d715U, 0, false, true, "" },
    { "    v_min_i32  v55, s27, v90 vop3", 0xd10c0037U, 0x0002b41bU, true, true, "" },
    { "    v_max_i32  v154, v21, v107", 0x1b34d715U, 0, false, true, "" },
    { "    v_max_i32  v55, s27, v90 vop3", 0xd10d0037U, 0x0002b41bU, true, true, "" },
    { "    v_min_u32  v154, v21, v107", 0x1d34d715U, 0, false, true, "" },
    { "    v_min_u32  v55, s27, v90 vop3", 0xd10e0037U, 0x0002b41bU, true, true, "" },
    { "    v_max_u32  v154, v21, v107", 0x1f34d715U, 0, false, true, "" },
    { "    v_max_u32  v55, s27, v90 vop3", 0xd10f0037U, 0x0002b41bU, true, true, "" },
    { "    v_lshrrev_b32  v154, v21, v107", 0x2134d715U, 0, false, true, "" },
    { "    v_lshrrev_b32  v55, s27, v90 vop3", 0xd1100037U, 0x0002b41bU, true, true, "" },
    { "    v_ashrrev_i32  v154, v21, v107", 0x2334d715U, 0, false, true, "" },
    { "    v_ashrrev_i32  v55, s27, v90 vop3", 0xd1110037U, 0x0002b41bU, true, true, "" },
    { "    v_lshlrev_b32  v154, v21, v107", 0x2534d715U, 0, false, true, "" },
    { "    v_lshlrev_b32  v55, s27, v90 vop3", 0xd1120037U, 0x0002b41bU, true, true, "" },
    { "    v_and_b32  v154, v21, v107", 0x2734d715U, 0, false, true, "" },
    { "    v_and_b32  v55, s27, v90 vop3", 0xd1130037U, 0x0002b41bU, true, true, "" },
    { "    v_or_b32  v154, v21, v107", 0x2934d715U, 0, false, true, "" },
    { "    v_or_b32  v55, s27, v90 vop3", 0xd1140037U, 0x0002b41bU, true, true, "" },
    { "    v_xor_b32  v154, v21, v107", 0x2b34d715U, 0, false, true, "" },
    { "    v_xor_b32  v55, s27, v90 vop3", 0xd1150037U, 0x0002b41bU, true, true, "" },
    { "    v_mac_f32  v154, v21, v107", 0x2d34d715U, 0, false, true, "" },
    { "    v_mac_f32  v55, s27, v90 vop3", 0xd1160037U, 0x0002b41bU, true, true, "" },
    { "    v_madmk_f32 v154, v21, 6.9551627e+13, v107",
        0x2f34d715U, 0x567d0700U, true, true, "" },
    { "    v_madmk_f32 v154, v21, 45543, v107", 0x2f34d715U, 45543, true, true, "" },
    { "    v_madak_f32 v154, v21, v107, 6.9551627e+13",
        0x3134d715U, 0x567d0700U, true, true, "" },
    { "    v_madak_f32 v154, v21, v107, 45543", 0x3134d715U, 45543, true, true, "" },
    { "    v_add_u32  v154, vcc, v21, v107", 0x3334d715U, 0, false, true, "" },
    { "    v_add_u32  v55, vcc, s27, v90 vop3", 0xd1196a37U, 0x0002b41bU, true, true, "" },
    { "    v_sub_u32  v154, vcc, v21, v107", 0x3534d715U, 0, false, true, "" },
    { "    v_sub_u32  v55, vcc, s27, v90 vop3", 0xd11a6a37U, 0x0002b41bU, true, true, "" },
    { "    v_subrev_u32  v154, vcc, v21, v107", 0x3734d715U, 0, false, true, "" },
    { "    v_subrev_u32  v55, vcc, s27, v90 vop3",
        0xd11b6a37U, 0x0002b41bU, true, true, "" },
    { "    v_addc_u32  v154, vcc, v21, v107, vcc", 0x3934d715U, 0, false, true, "" },
    { "    v_addc_u32  v55, vcc, s27, v90, vcc vop3",
        0xd11c6a37U, 0x01aab41bU, true, true, "" },
    { "    v_subb_u32  v154, vcc, v21, v107, vcc", 0x3b34d715U, 0, false, true, "" },
    { "    v_subb_u32  v55, vcc, s27, v90, vcc vop3",
        0xd11d6a37U, 0x01aab41bU, true, true, "" },
    { "    v_subbrev_u32  v154, vcc, v21, v107, vcc", 0x3d34d715U, 0, false, true, "" },
    { "    v_subbrev_u32  v55, vcc, s27, v90, vcc vop3",
        0xd11e6a37U, 0x01aab41bU, true, true, "" },
    { "    v_add_f16  v154, v21, v107", 0x3f34d715U, 0, false, true, "" },
    { "    v_add_f16  v154, 1.374, v107", 0x3f34d6ffU, 0x3d7f, true, true, "" },
    { "    v_add_f16  v55, s27, v90 vop3", 0xd11f0037U, 0x0002b41bU, true, true, "" },
    { "    v_sub_f16  v154, v21, v107", 0x4134d715U, 0, false, true, "" },
    { "    v_sub_f16  v55, s27, v90 vop3", 0xd1200037U, 0x0002b41bU, true, true, "" },
    { "    v_subrev_f16  v154, v21, v107", 0x4334d715U, 0, false, true, "" },
    { "    v_subrev_f16  v55, s27, v90 vop3", 0xd1210037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_f16  v154, v21, v107", 0x4534d715U, 0, false, true, "" },
    { "    v_mul_f16  v55, s27, v90 vop3", 0xd1220037U, 0x0002b41bU, true, true, "" },
    { "    v_mac_f16  v154, v21, v107", 0x4734d715U, 0, false, true, "" },
    { "    v_mac_f16  v55, s27, v90 vop3", 0xd1230037U, 0x0002b41bU, true, true, "" },
    { "    v_madmk_f16 v154, v21, 6.9551, v107", 0x4934d715U, 0x000046f5U, true, true, "" },
    { "    v_madmk_f16 v154, v21, 45543, v107", 0x4934d715U, 45543, true, true, "" },
    { "    v_madak_f16 v154, v21, v107, 6.9551", 0x4b34d715U, 0x000046f5U, true, true, "" },
    { "    v_madak_f16 v154, v21, v107, 45543", 0x4b34d715U, 45543, true, true, "" },
    { "    v_add_u16  v154, v21, v107", 0x4d34d715U, 0, false, true, "" },
    { "    v_add_u16  v55, s27, v90 vop3", 0xd1260037U, 0x0002b41bU, true, true, "" },
    { "    v_sub_u16  v154, v21, v107", 0x4f34d715U, 0, false, true, "" },
    { "    v_sub_u16  v55, s27, v90 vop3", 0xd1270037U, 0x0002b41bU, true, true, "" },
    { "    v_subrev_u16  v154, v21, v107", 0x5134d715U, 0, false, true, "" },
    { "    v_subrev_u16  v55, s27, v90 vop3", 0xd1280037U, 0x0002b41bU, true, true, "" },
    { "    v_mul_lo_u16  v154, v21, v107", 0x5334d715U, 0, false, true, "" },
    { "    v_mul_lo_u16  v55, s27, v90 vop3", 0xd1290037U, 0x0002b41bU, true, true, "" },
    { "    v_lshlrev_b16  v154, v21, v107", 0x5534d715U, 0, false, true, "" },
    { "    v_lshlrev_b16  v55, s27, v90 vop3", 0xd12a0037U, 0x0002b41bU, true, true, "" },
    { "    v_lshrrev_b16  v154, v21, v107", 0x5734d715U, 0, false, true, "" },
    { "    v_lshrrev_b16  v55, s27, v90 vop3", 0xd12b0037U, 0x0002b41bU, true, true, "" },
    { "    v_ashrrev_i16  v154, v21, v107", 0x5934d715U, 0, false, true, "" },
    { "    v_ashrrev_i16  v55, s27, v90 vop3", 0xd12c0037U, 0x0002b41bU, true, true, "" },
    { "    v_max_f16  v154, v21, v107", 0x5b34d715U, 0, false, true, "" },
    { "    v_max_f16  v55, s27, v90 vop3", 0xd12d0037U, 0x0002b41bU, true, true, "" },
    { "    v_min_f16  v154, v21, v107", 0x5d34d715U, 0, false, true, "" },
    { "    v_min_f16  v55, s27, v90 vop3", 0xd12e0037U, 0x0002b41bU, true, true, "" },
    { "    v_max_u16  v154, v21, v107", 0x5f34d715U, 0, false, true, "" },
    { "    v_max_u16  v55, s27, v90 vop3", 0xd12f0037U, 0x0002b41bU, true, true, "" },
    { "    v_max_i16  v154, v21, v107", 0x6134d715U, 0, false, true, "" },
    { "    v_max_i16  v55, s27, v90 vop3", 0xd1300037U, 0x0002b41bU, true, true, "" },
    { "    v_min_u16  v154, v21, v107", 0x6334d715U, 0, false, true, "" },
    { "    v_min_u16  v55, s27, v90 vop3", 0xd1310037U, 0x0002b41bU, true, true, "" },
    { "    v_min_i16  v154, v21, v107", 0x6534d715U, 0, false, true, "" },
    { "    v_min_i16  v55, s27, v90 vop3", 0xd1320037U, 0x0002b41bU, true, true, "" },
    { "    v_ldexp_f16  v154, v21, v107", 0x6734d715U, 0, false, true, "" },
    { "    v_ldexp_f16  v55, s27, v90 vop3", 0xd1330037U, 0x0002b41bU, true, true, "" },
    /* VOP1 - SDWA */
    { "    v_mov_b32  v158, sext(v79)", 0x7f3c02f9U, 0x060e064fU, true, true, "" },
    { "    v_mov_b32  v158, sext(abs(v79))", 0x7f3c02f9U, 0x062e064fU, true, true, "" },
    { "    v_mov_b32  v158, sext(-abs(v79))", 0x7f3c02f9U, 0x063e064fU, true, true, "" },
    { "    v_mov_b32  v158, v79 dst_sel:w1 src0_sel:b2 dst_un:preserve",
        0x7f3c02f9U, 0x0602154fU, true, true, "" },
    { "    v_mov_b32  v158, v79 dst_sel:w1 src0_sel:b2 dst_un:preserve clamp",
        0x7f3c02f9U, 0x0602354fU, true, true, "" },
    /* VOP1 - SDWA errors */
    { "    v_mov_b32  v158, 12343 dst_sel:w1 src0_sel:b2", 0, 0, false, false,
        "test.s:1:5: Error: Literal with SDWA or DPP word is illegal\n" },
    { "    v_mov_b32  v158, s43 dst_sel:w1 src0_sel:b2", 0, 0, false, false,
        "test.s:1:5: Error: SRC0 must be a vector register with SDWA or DPP word\n" },
    { "    v_mov_b32  v158, v79 dst_sel:w1 mul:2", 0, 0, false, false,
        "test.s:1:26: Error: Mixing modifiers from different encodings is illegal\n" },
    /* VOP1 - DPP */
    { "    v_mov_b32  v158, v79 quad_perm:[1,2,3,0] bound_ctrl row_mask:4 bank_mask:5",
        0x7f3c02faU, 0x4508394fU, true, true, "" },
    { "    v_mov_b32  v158, v79 quad_perm:[1,2,3,0] row_mask:4 bank_mask:5",
        0x7f3c02faU, 0x4500394fU, true, true, "" },
    { "    v_mov_b32  v158, abs(v79) quad_perm:[1,2,3,0] row_mask:4 bank_mask:5",
        0x7f3c02faU, 0x4520394fU, true, true, "" },
    { "    v_mov_b32  v158, -abs(v79) quad_perm:[1,2,3,0] row_mask:4 bank_mask:5",
        0x7f3c02faU, 0x4530394fU, true, true, "" },
    /* VOP1 - DPP errors */
    { "    v_mov_b32  v158, sext(-abs(v79)) quad_perm:[1,2,3,0] ", 0, 0, false, false,
        "test.s:1:5: Error: SEXT modifiers is unavailable for DPP word\n" },
    /* VOP1 instructions */
    { "    v_mov_b32  v55, s27 vop3", 0xd1410037U, 0x0000001bU, true, true, "" },
    { "    v_mov_b32  v55, s27 clamp", 0xd1418037U, 0x0000001bU, true, true, "" },
    { "    v_mov_b32  v55, abs(s27) clamp", 0xd1418137U, 0x0000001bU, true, true, "" },
    { "v_nop", 0x7e000000U, 0, false, true, "" },
    { "    v_readfirstlane_b32 s30, s79", 0x7e3c044fU, 0, false, true, "" },
    { "    v_readfirstlane_b32 s55, s27 vop3", 0xd1420037U, 0x0000001bU, true, true, "" },
    { "    v_cvt_i32_f64  v55, s[26:27] vop3", 0xd1430037U, 0x0000001aU, true, true, "" },
    { "    v_cvt_f64_i32  v[55:56], v27 vop3", 0xd1440037U, 0x0000011bU, true, true, "" },
    { "    v_cvt_f32_i32  v55, v27 vop3", 0xd1450037U, 0x0000011bU, true, true, "" },
    { "     v_fract_f32  v158, v79", 0x7f3c374fU, 0, false, true, "" },
    { "     v_fract_f32  v158, v39 vop3", 0xd15b009eU, 0x00000127U, true, true, "" },
    { "     v_trunc_f32  v158, v79", 0x7f3c394fU, 0, false, true, "" },
    { "     v_trunc_f32  v158, v39 vop3", 0xd15c009eU, 0x00000127U, true, true, "" },
    { "     v_ceil_f32  v158, v79", 0x7f3c3b4fU, 0, false, true, "" },
    { "     v_ceil_f32  v158, v39 vop3", 0xd15d009eU, 0x00000127U, true, true, "" },
    { "     v_rndne_f32  v158, v79", 0x7f3c3d4fU, 0, false, true, "" },
    { "     v_rndne_f32  v158, v39 vop3", 0xd15e009eU, 0x00000127U, true, true, "" },
    { "     v_floor_f32  v158, v79", 0x7f3c3f4fU, 0, false, true, "" },
    { "     v_floor_f32  v158, v39 vop3", 0xd15f009eU, 0x00000127U, true, true, "" },
    { "     v_exp_f32  v158, v79", 0x7f3c414fU, 0, false, true, "" },
    { "     v_exp_f32  v158, v39 vop3", 0xd160009eU, 0x00000127U, true, true, "" },
    { "     v_log_f32  v158, v79", 0x7f3c434fU, 0, false, true, "" },
    { "     v_log_f32  v158, v39 vop3", 0xd161009eU, 0x00000127U, true, true, "" },
    { "     v_rcp_f32  v158, v79", 0x7f3c454fU, 0, false, true, "" },
    { "     v_rcp_f32  v158, v39 vop3", 0xd162009eU, 0x00000127U, true, true, "" },
    { "     v_rcp_iflag_f32  v158, v79", 0x7f3c474fU, 0, false, true, "" },
    { "     v_rcp_iflag_f32  v158, v39 vop3", 0xd163009eU, 0x00000127U, true, true, "" },
    { "     v_rsq_f32  v158, v79", 0x7f3c494fU, 0, false, true, "" },
    { "     v_rsq_f32  v158, v39 vop3", 0xd164009eU, 0x00000127U, true, true, "" },
    { "     v_rcp_f64  v[158:159], v[79:80]", 0x7f3c4b4fU, 0, false, true, "" },
    { "     v_rcp_f64  v[158:159], v[39:40] vop3", 0xd165009eU, 0x127U, true, true, "" },
    { "     v_rsq_f64  v[158:159], v[79:80]", 0x7f3c4d4fU, 0, false, true, "" },
    { "     v_rsq_f64  v[158:159], v[39:40] vop3", 0xd166009eU, 0x127U, true, true, "" },
    { "     v_sqrt_f32  v158, v79", 0x7f3c4f4fU, 0, false, true, "" },
    { "     v_sqrt_f32  v158, v39 vop3", 0xd167009eU, 0x00000127U, true, true, "" },
    { "     v_sqrt_f64  v[158:159], v[79:80]", 0x7f3c514fU, 0, false, true, "" },
    { "     v_sqrt_f64  v[158:159], v[39:40] vop3", 0xd168009eU, 0x127U, true, true, "" },
    { "     v_sin_f32  v158, v79", 0x7f3c534fU, 0, false, true, "" },
    { "     v_sin_f32  v158, v39 vop3", 0xd169009eU, 0x00000127U, true, true, "" },
    { "     v_cos_f32  v158, v79", 0x7f3c554fU, 0, false, true, "" },
    { "     v_cos_f32  v158, v39 vop3", 0xd16a009eU, 0x00000127U, true, true, "" },
    { "     v_not_b32  v158, v79", 0x7f3c574fU, 0, false, true, "" },
    { "     v_not_b32  v158, v39 vop3", 0xd16b009eU, 0x00000127U, true, true, "" },
    { "     v_bfrev_b32  v158, v79", 0x7f3c594fU, 0, false, true, "" },
    { "     v_bfrev_b32  v158, v39 vop3", 0xd16c009eU, 0x00000127U, true, true, "" },
    { "     v_ffbh_u32  v158, v79", 0x7f3c5b4fU, 0, false, true, "" },
    { "     v_ffbh_u32  v158, v39 vop3", 0xd16d009eU, 0x00000127U, true, true, "" },
    { "     v_ffbl_b32  v158, v79", 0x7f3c5d4fU, 0, false, true, "" },
    { "     v_ffbl_b32  v158, v39 vop3", 0xd16e009eU, 0x00000127U, true, true, "" },
    { "     v_ffbh_i32  v158, v79", 0x7f3c5f4fU, 0, false, true, "" },
    { "     v_ffbh_i32  v158, v39 vop3", 0xd16f009eU, 0x00000127U, true, true, "" },
    { nullptr, 0, 0, false, false, 0 }
};
