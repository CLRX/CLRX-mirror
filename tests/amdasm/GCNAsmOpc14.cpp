/*
 *  CLRadeonExtender - Unofficial OpenCL Radeon Extensions Library
 *  Copyright (C) 2014-2017 Mateusz Szpakowski
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <CLRX/Config.h>
#include "GCNAsmOpc.h"

const GCNAsmOpcodeCase encGCN14OpcodeCases[] =
{
    /* extra scalar registers */
    { "s_add_u32 s21, shared_base, s61\n", 0x80153debU, 0, false, true, "" },
    { "s_add_u32 s21, src_shared_base, s61\n", 0x80153debU, 0, false, true, "" },
    { "s_add_u32 s21, shared_limit, s61\n", 0x80153decU, 0, false, true, "" },
    { "s_add_u32 s21, src_shared_limit, s61\n", 0x80153decU, 0, false, true, "" },
    { "s_add_u32 s21, private_base, s61\n", 0x80153dedU, 0, false, true, "" },
    { "s_add_u32 s21, src_private_base, s61\n", 0x80153dedU, 0, false, true, "" },
    { "s_add_u32 s21, private_limit, s61\n", 0x80153deeU, 0, false, true, "" },
    { "s_add_u32 s21, src_private_limit, s61\n", 0x80153deeU, 0, false, true, "" },
    { "s_add_u32 s21, pops_exiting_wave_id, s61\n", 0x80153defU, 0, false, true, "" },
    { "s_add_u32 s21, src_pops_exiting_wave_id, s61\n", 0x80153defU, 0, false, true, "" },
    { "s_add_u32 s21, execz, s61\n", 0x80153dfcU, 0, false, true, "" },
    { "s_add_u32 s21, src_execz, s61\n", 0x80153dfcU, 0, false, true, "" },
    { "s_add_u32 s21, vccz, s61\n", 0x80153dfbU, 0, false, true, "" },
    { "s_add_u32 s21, src_vccz, s61\n", 0x80153dfbU, 0, false, true, "" },
    { "s_add_u32 s21, scc, s61\n", 0x80153dfdU, 0, false, true, "" },
    { "s_add_u32 s21, src_scc, s61\n", 0x80153dfdU, 0, false, true, "" },
    { "s_add_u32 ttmp0, s4, s61", 0x806c3d04U, 0, false, true, "" },
    { "s_add_u32 ttmp1, s4, s61", 0x806d3d04U, 0, false, true, "" },
    { "s_add_u32 ttmp2, s4, s61", 0x806e3d04U, 0, false, true, "" },
    { "s_add_u32 ttmp3, s4, s61", 0x806f3d04U, 0, false, true, "" },
    { "s_add_u32 ttmp4, s4, s61", 0x80703d04U, 0, false, true, "" },
    { "s_add_u32 ttmp5, s4, s61", 0x80713d04U, 0, false, true, "" },
    { "s_add_u32 ttmp14, s4, s61", 0x807a3d04U, 0, false, true, "" },
    { "s_add_u32 ttmp15, s4, s61", 0x807b3d04U, 0, false, true, "" },
    { "s_add_u32 ttmp16, s4, s61", 0x807b3d04U, 0, false, false,
        "test.s:1:11: Error: TTMPRegister number out of range (0-15)\n" },
    { "s_add_u32 ttmp[5], s4, s61", 0x80713d04U, 0, false, true, "" },
    { "s_add_u32 ttmp[5:5], s4, s61", 0x80713d04U, 0, false, true, "" },
    { "    s_add_u32  tma_lo, s4, s61", 0x806e3d04U, 0, false, false,
        "test.s:1:16: Error: Expected 1 scalar register\n" },
    { "    s_add_u32  tba_lo, s4, s61", 0x806e3d04U, 0, false, false,
        "test.s:1:16: Error: Expected 1 scalar register\n" },
    /* SOP2 instructions */
    { "        s_mul_hi_u32    s21, s4, s61\n", 0x96153d04U, 0, false, true, "" },
    { "        s_mul_hi_i32    s21, s4, s61\n", 0x96953d04U, 0, false, true, "" },
    { "        s_lshl1_add_u32 s21, s4, s61\n", 0x97153d04U, 0, false, true, "" },
    { "        s_lshl2_add_u32 s21, s4, s61\n", 0x97953d04U, 0, false, true, "" },
    { "        s_lshl3_add_u32 s21, s4, s61\n", 0x98153d04U, 0, false, true, "" },
    { "        s_lshl4_add_u32 s21, s4, s61\n", 0x98953d04U, 0, false, true, "" },
    { "        s_pack_ll_b32_b16 s21, s4, s61\n", 0x99153d04U, 0, false, true, "" },
    { "        s_pack_lh_b32_b16 s21, s4, s61\n", 0x99953d04U, 0, false, true, "" },
    { "        s_pack_hh_b32_b16 s21, s4, s61\n", 0x9a153d04U, 0, false, true, "" },
    /* SOP1 instructions */
    { "s_andn1_saveexec_b64 s[86:87], s[20:21]\n", 0xbed63314U, 0, false, true, "" },
    { "s_orn1_saveexec_b64 s[86:87], s[20:21]\n", 0xbed63414U, 0, false, true, "" },
    { "s_andn1_wrexec_b64 s[86:87], s[20:21]\n", 0xbed63514U, 0, false, true, "" },
    { "s_andn2_wrexec_b64 s[86:87], s[20:21]\n", 0xbed63614U, 0, false, true, "" },
    { "s_bitreplicate_b64_b32 s[86:87], s20\n", 0xbed63714U, 0, false, true, "" },
    /* SOPK instructions */
    { "s_call_b64 s[44:45], xxxx+8\nxxxx:", 0xbaac0002U, 0, false, true, "" },
    /* SOPP instructions */
    { "        s_endpgm_ordered_ps_done\n", 0xbf9e0000U, 0, false, true, "" },
    /* hwreg names */
    { "    s_getreg_b32    s43, hwreg(mode, 0, 1)", 0xb8ab0001U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg  (mode, 0, 1)", 0xb8ab0001U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg  (mode  ,   0  , 1  )",
                    0xb8ab0001U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_MODE, 0, 1)", 0xb8ab0001U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(status, 0, 1)", 0xb8ab0002U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_STATUS, 0, 1)",
        0xb8ab0002U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(trapsts, 0, 1)", 0xb8ab0003U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_TRAPSTS, 0, 1)",
                    0xb8ab0003U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(hw_id, 0, 1)", 0xb8ab0004U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_HW_ID, 0, 1)",
                    0xb8ab0004U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(gpr_alloc, 0, 1)", 0xb8ab0005U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_GPR_ALLOC, 0, 1)",
                    0xb8ab0005U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(lds_alloc, 0, 1)", 0xb8ab0006U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_LDS_ALLOC, 0, 1)",
                    0xb8ab0006U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(ib_sts, 0, 1)", 0xb8ab0007U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_IB_STS, 0, 1)",
                    0xb8ab0007U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(pc_lo, 0, 1)", 0xb8ab0008U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_PC_LO, 0, 1)",
                    0xb8ab0008U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(pc_hi, 0, 1)", 0xb8ab0009U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_PC_HI, 0, 1)",
                    0xb8ab0009U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(inst_dw0, 0, 1)", 0xb8ab000aU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_INST_DW0, 0, 1)",
                    0xb8ab000aU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(inst_dw1, 0, 1)", 0xb8ab000bU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_INST_DW1, 0, 1)",
                    0xb8ab000bU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(ib_dbg0, 0, 1)", 0xb8ab000cU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_IB_DBG0, 0, 1)",
                    0xb8ab000cU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(ib_dbg1, 0, 1)", 0xb8ab000dU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_IB_DBG1, 0, 1)",
                0xb8ab000dU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(flush_ib, 0, 1)", 0xb8ab000eU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_FLUSH_IB, 0, 1)",
                0xb8ab000eU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(sh_mem_bases, 0, 1)",
                0xb8ab000fU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_SH_MEM_BASES, 0, 1)",
                0xb8ab000fU, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(sq_shader_tba_lo, 0, 1)",
                0xb8ab0010U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_SQ_SHADER_TBA_LO, 0, 1)",
                0xb8ab0010U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(sq_shader_tba_hi, 0, 1)",
                0xb8ab0011U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_SQ_SHADER_TBA_HI, 0, 1)",
                0xb8ab0011U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(sq_shader_tma_lo, 0, 1)",
                0xb8ab0012U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_SQ_SHADER_TMA_LO, 0, 1)",
                0xb8ab0012U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(sq_shader_tma_hi, 0, 1)",
                0xb8ab0013U, 0, false, true, "" },
    { "    s_getreg_b32    s43, hwreg(HWREG_SQ_SHADER_TMA_HI, 0, 1)",
                0xb8ab0013U, 0, false, true, "" },
    /* message types */
    { "    s_sendmsg  sendmsg(interrupt)", 0xbf900001U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_INTERRUPT)", 0xbf900001U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(system)", 0xbf90000fU, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_SYSTEM)", 0xbf90000fU, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_SYSMSG)", 0xbf90000fU, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(gs, nop)", 0xbf900002U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS, GS_OP_NOP)", 0xbf900002U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(gs, cut, 0)", 0xbf900012U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS, GS_OP_CUT, 0)", 0xbf900012U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(gs, cut, 1)", 0xbf900112U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS, GS_OP_CUT, 1)", 0xbf900112U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(gs, emit, 0)", 0xbf900022U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS, GS_OP_EMIT, 0)", 0xbf900022U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(gs, emit_cut, 3)", 0xbf900332U, 0,
        false, true, "" },
    { "    s_sendmsg  sendmsg(gs, emit-cut, 3)", 0xbf900332U, 0,
        false, true, "" },
    { "    s_sendmsg  sendmsg ( gs    , emit_cut  , 3  )", 0xbf900332U, 0,
        false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS, GS_OP_EMIT_CUT, 3)", 0xbf900332U, 0,
        false, true, "" },
    { "    s_sendmsg  sendmsg(gs_done, nop)", 0xbf900003U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS_DONE, GS_OP_NOP)", 0xbf900003U, 0, false, true, "" },
    { "    s_sendmsghalt  sendmsg(interrupt)", 0xbf910001U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_SAVEWAVE)",
        0xbf900004U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(savewave)", 0xbf900004U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_STALL_WAVE_GEN)", 0xbf900005U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(stall_wave_gen)", 0xbf900005U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_HALT_WAVES)", 0xbf900006U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(halt_waves)", 0xbf900006U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_ORDERED_PS_DONE)", 0xbf900007U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(ordered_ps_done)", 0xbf900007U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_EARLY_PRIM_DEALLOC)", 0xbf900008U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(early_prim_dealloc)", 0xbf900008U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GS_ALLOC_REQ)", 0xbf900009U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(gs_alloc_req)", 0xbf900009U, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(MSG_GET_DOORBELL)", 0xbf90000aU, 0, false, true, "" },
    { "    s_sendmsg  sendmsg(get_doorbell)", 0xbf90000aU, 0, false, true, "" },
    /* waitcnts */
    { "s_waitcnt       vmcnt(6) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8c0d36U, 0, false, true, "" },
    { "s_waitcnt       vmcnt(22) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8c4d36U, 0, false, true, "" },
    { "s_waitcnt       vmcnt(38) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8c8d36U, 0, false, true, "" },
    { "s_waitcnt       vmcnt(54) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8ccd36U, 0, false, true, "" },
    { "s_waitcnt       vmcnt(15) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8c0d3fU, 0, false, true, "" },
    { "s_waitcnt       vmcnt(31) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8c4d3fU, 0, false, true, "" },
    { "s_waitcnt       vmcnt(47) & expcnt(3) & lgkmcnt(13)\n",
        0xbf8c8d3fU, 0, false, true, "" },
    { "s_waitcnt       expcnt(3) & lgkmcnt(13)\n", 0xbf8ccd3fU, 0, false, true, "" },
    { "s_waitcnt       " "vmcnt(0) & expcnt(0) & lgkmcnt(0)\n",
        0xbf8c0000U, 0, false, true, "" },
    /* SMEM encoding */
    { "s_load_dword    s50, s[58:59], s91\n", 0xc0000c9dU, 0x5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], s91 glc:0 nv:0\n",
        0xc0000c9dU, 0x5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x5b\n", 0xc0020c9dU, 0x5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x13da5b\n", 0xc0020c9dU, 0x13da5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x5b nv\n", 0xc0028c9dU, 0x5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x5b nv:1\n", 0xc0028c9dU, 0x5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x5b nv glc\n", 0xc0038c9dU, 0x5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x32 offset:0x5b\n",
        0xc0024c9dU, 0x3200005b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x32 offset:0x13da5b\n",
        0xc0024c9dU, 0x3213da5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], zz\nzz=0x13da5b",
        0xc0020c9dU, 0x13da5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], zz1 offset:zz2\nzz1=0x32\nzz2=0x13da5b",
        0xc0024c9dU, 0x3213da5b, true, true, "" },
    { "s_load_dword    s50, s[58:59], 0x32 offset:0x33da5b\n",
        0xc0024c9dU, 0x3213da5b, true, true,
        "test.s:1:44: Warning: Value 0x33da5b truncated to 0x13da5b\n" },
    { "s_load_dword    s50, s[58:59], zz1 offset:zz2\nzz1=0x132\nzz2=0x33da5b",
        0xc0024c9dU, 0x3213da5b, true, true,
        "test.s:1:32: Warning: Value 0x132 truncated to 0x32\n"
        "test.s:1:43: Warning: Value 0x33da5b truncated to 0x13da5b\n" },
    /* SMEM instructions */
    { "        s_atomic_swap s50, s[60:61], 0x5b\n", 0xc2020c9eU, 0x5b, true, true, "" },
    { "        s_atomic_cmpswap s[50:51], s[60:61], 0x5b\n",
        0xc2060c9eU, 0x5b, true, true, "" },
    { "        s_atomic_add s50, s[60:61], 0x5b\n", 0xc20a0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_sub s50, s[60:61], 0x5b\n", 0xc20e0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_smin s50, s[60:61], 0x5b\n", 0xc2120c9eU, 0x5b, true, true, "" },
    { "        s_atomic_umin s50, s[60:61], 0x5b\n", 0xc2160c9eU, 0x5b, true, true, "" },
    { "        s_atomic_smax s50, s[60:61], 0x5b\n", 0xc21a0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_umax s50, s[60:61], 0x5b\n", 0xc21e0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_and s50, s[60:61], 0x5b\n", 0xc2220c9eU, 0x5b, true, true, "" },
    { "        s_atomic_or s50, s[60:61], 0x5b\n", 0xc2260c9eU, 0x5b, true, true, "" },
    { "        s_atomic_xor s50, s[60:61], 0x5b\n", 0xc22a0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_inc s50, s[60:61], 0x5b\n", 0xc22e0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_dec s50, s[60:61], 0x5b\n", 0xc2320c9eU, 0x5b, true, true, "" },
    { "        s_atomic_swap_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2820c9eU, 0x5b, true, true, "" },
    { "        s_atomic_cmpswap_x2 s[52:55], s[60:61], 0x5b\n",
        0xc2860d1eU, 0x5b, true, true, "" },
    { "        s_atomic_add_x2 s[50:51], s[60:61], 0x5b\n",
        0xc28a0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_sub_x2 s[50:51], s[60:61], 0x5b\n",
        0xc28e0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_smin_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2920c9eU, 0x5b, true, true, "" },
    { "        s_atomic_umin_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2960c9eU, 0x5b, true, true, "" },
    { "        s_atomic_smax_x2 s[50:51], s[60:61], 0x5b\n",
        0xc29a0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_umax_x2 s[50:51], s[60:61], 0x5b\n",
        0xc29e0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_and_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2a20c9eU, 0x5b, true, true, "" },
    { "        s_atomic_or_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2a60c9eU, 0x5b, true, true, "" },
    { "        s_atomic_xor_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2aa0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_inc_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2ae0c9eU, 0x5b, true, true, "" },
    { "        s_atomic_dec_x2 s[50:51], s[60:61], 0x5b\n",
        0xc2b20c9eU, 0x5b, true, true, "" },
    /* SDWA encoding */
    { "   v_cndmask_b32   v154, v0, v107, vcc dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x0134d6f9U, 0, true, true, "" },
    { "   v_cndmask_b32   v154, v0, v107, vcc "
        "mul:4 dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x0134d6f9U, 0x8000, true, true, "" },
    { "v_add_f32   v154, v61, v107 dst_sel:byte0 src0_sel:byte0 src1_sel:byte0\n",
        0x0334d6f9U, 0x0000003dU, true, true, "" },
    { "v_add_f32   v154, v61, vcc_hi dst_sel:byte0 src0_sel:byte0 src1_sel:byte0\n",
        0x0334d6f9U, 0x8000003dU, true, true, "" },
    { "v_add_f32   v154, s61, v107 dst_sel:byte0 src0_sel:byte0 src1_sel:byte0\n",
        0x0334d6f9U, 0x0080003dU, true, true, "" },
    { "v_cndmask_b32   v154, sext(-abs(v65)), v107, vcc mul:2",
        0x0134d6f9U, 0x063e4641U, true, true, "" },
    { "v_add_f32   v154, sext(-abs(v65)), vcc_hi",
        0x0334d6f9U, 0x863e0641U, true, true, "" },
    { "v_add_f32   v154, sext(-abs(s65)), v107",
        0x0334d6f9U, 0x06be0641U, true, true, "" },
    // VOP3 encoding
    { "v_writelane_b32 v55, v27, v90", 0xd28a0037U, 0x0002b51bU, true, true, "" },
    /* SDWA encoding VOP1 */
    { "v_mov_b32   v154, v61 dst_sel:byte0 src0_sel:byte0\n",
        0x7f3402f9U, 0x0000003dU, true, true, "" },
    { "v_mov_b32   v154, v61 dst_sel:byte0 src0_sel:byte0 div:2\n",
        0x7f3402f9U, 0x0000c03dU, true, true, "" },
    { "v_mov_b32   v154, s61 dst_sel:byte0 src0_sel:byte0\n",
        0x7f3402f9U, 0x0080003dU, true, true, "" },
    { "v_mov_b32   v154, sext(s61) dst_sel:byte0 src0_sel:byte0\n",
        0x7f3402f9U, 0x0088003dU, true, true, "" },
    { "v_mov_b32   v154, sext(s61) dst_sel:byte0 src0_sel:byte0 clamp\n",
        0x7f3402f9U, 0x0088203dU, true, true, "" },
    /* SDWA encoding VOPC */
    { "v_cmp_class_f32 vcc, v0, v107 mul:4 dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x7c20d6f9U, 0x8000, true, true, "" },
    { "v_cmp_class_f32 vcc, v61, v107 dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x7c20d6f9U, 0x3dU, true, true, "" },
    { "v_cmp_class_f32 vcc, v61, vcc_hi dst_sel:byte0 src0_sel:byte0 src1_sel:byte0",
        0x7c20d6f9U, 0x8000003dU, true, true, "" },
    { "v_cmp_class_f32 vcc, s61, v107 dst_sel:byte0 src0_sel:byte0 src1_sel:byte0\n",
        0x7c20d6f9U, 0x0080003dU, true, true, "" },
    { "v_cmp_class_f32 vcc, sext(-abs(v65)), v107 mul:2",
        0x7c20d6f9U, 0x063e4641U, true, true, "" },
    { "v_cmp_class_f32 vcc, sext(-abs(v65)), vcc_hi",
        0x7c20d6f9U, 0x863e0641U, true, true, "" },
    { "v_cmp_class_f32 vcc, sext(-abs(s65)), v107",
        0x7c20d6f9U, 0x06be0641U, true, true, "" },
    /* VOP2 instructions */
    { "v_add_co_u32    v154, vcc, v21, v107\n", 0x3334d715U, 0, false, true, "" },
    { "v_sub_co_u32    v154, vcc, v21, v107\n", 0x3534d715U, 0, false, true, "" },
    { "v_subrev_co_u32 v154, vcc, v21, v107\n", 0x3734d715U, 0, false, true, "" },
    { "v_addc_co_u32   v154, vcc, v21, v107, vcc\n", 0x3934d715U, 0, false, true, "" },
    { "v_subb_co_u32   v154, vcc, v21, v107, vcc\n", 0x3b34d715U, 0, false, true, "" },
    { "v_subbrev_co_u32 v154, vcc, v21, v107, vcc\n", 0x3d34d715U, 0, false, true, "" },
    { "v_add_co_u32    v55, s[18:19], s27, v90\n",
        0xd1191237U, 0x0002b41bU, true, true, "" },
    { "v_add_co_u32    v55, vcc, s27, v90 vop3\n",
        0xd1196a37U, 0x0002b41bU, true, true, "" },
    { "v_sub_co_u32    v55, s[18:19], s27, v90\n",
        0xd11a1237U, 0x0002b41bU, true, true, "" },
    { "v_sub_co_u32    v55, vcc, s27, v90 vop3\n",
        0xd11a6a37U, 0x0002b41bU, true, true, "" },
    { "v_subrev_co_u32 v55, s[18:19], s27, v90\n",
        0xd11b1237U, 0x0002b41bU, true, true, "" },
    { "v_subrev_co_u32 v55, vcc, s27, v90 vop3\n",
        0xd11b6a37U, 0x0002b41bU, true, true, "" },
    { "v_addc_co_u32   v55, s[6:7], v27, -v90, s[24:25]\n",
        0xd11c0637U, 0x4062b51bU, true, true, "" },
    { "v_subb_co_u32   v55, s[6:7], v27, -v90, s[24:25]\n",
        0xd11d0637U, 0x4062b51bU, true, true, "" },
    { "v_subbrev_co_u32   v55, s[6:7], v27, -v90, s[24:25]\n",
        0xd11e0637U, 0x4062b51bU, true, true, "" },
    { "v_add_u32       v154, v21, v107\n", 0x6934d715U, 0, false, true, "" },
    { "v_sub_u32       v154, v21, v107\n", 0x6b34d715U, 0, false, true, "" },
    { "v_subrev_u32    v154, v21, v107\n", 0x6d34d715U, 0, false, true, "" },
    { "v_add_u32       v55, s27, v90 vop3\n", 0xd1340037U, 0x0002b41bU, true, true, "" },
    { "v_sub_u32       v55, s27, v90 vop3\n", 0xd1350037U, 0x0002b41bU, true, true, "" },
    { "v_subrev_u32    v55, s27, v90 vop3\n", 0xd1360037U, 0x0002b41bU, true, true, "" },
    { nullptr, 0, 0, false, false, 0 }
};
